#%RAML 1.0
title: Rubric #controller name
version: v1 #api version
baseUri: http://mysite.com/{version}
# protocols: [http, https]

/rubric/:
  post:
    description: |
      Create rubric.
    body:
      application/vnd.api+json:
        schema: |
          {
            "description": "Create rubric",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "required": true,
                "properties": {
                  "type": {
                    "type": "string",
                    "required": true,
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name_rubric": {
                        "type": "string",
                        "required": true,
                        "maxLength": 500
                      },
                      "url": {
                        "type": "string",
                        "required": true,
                        "maxLength": 255
                      },
                      "meta_title": {
                        "type": "string",
                        "required": false,
                        "maxLength": 255
                      },
                      "meta_description": {
                        "type": "string",
                        "required": false,
                        "maxLength": 255
                      },
                      "show_menu": {
                        "type": "boolean",
                        "required": true
                      },
                      "publish_rss": {
                        "type": "boolean",
                        "required": true
                      },
                      "post_aggregator": {
                        "type": "boolean",
                        "required": true
                      },
                      "display_tape": {
                        "type": "boolean",
                        "required": true
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": [{
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "required": true,
                                  "minLength": 1,
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "pattern": "/^tag$/",
                                  "required": true
                                }
                              }
                            }]
                          }
                        }
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "required": true,
                                  "minLength": 1,
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "pattern": "/^rubric$/",
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      }
                    }

                  }
                }

              }
            }
          }
        example: |
          {
            "data": {
              "type":          "rubric",
              "attributes":    {
                "name_rubric":      "name_rubric",
                "url":              "mysite.ru",
                "meta_title":       "meta_title",
                "meta_description": "meta_description",
                "show_menu":        true,
                "publish_rss":      true,
                "post_aggregator":  false,
                "display_tape":     true
              },
              "relationships": {
                "tags":   {
                  "data": [
                    {
                      "id":   1,
                      "type": "tag"
                    },
                    {
                      "id":   2,
                      "type": "tag"
                    }
                  ]
                },
                "parent": {
                  "data": {
                    "id":   1,
                    "type": "rubric"
                  }
                }
              }
            }
          }
    responses:
      201:
        description: |
          201 Create.
        body:
          application/vnd.api+json:
            schema: |
              {
                "description": "Create rubric",
                "type":        "object",
                "properties":  {
                  "data": {
                    "type":          "object",
                    "required":      true,
                    "properties":    {
                      "type":       {
                        "type":      "string",
                        "required":  true,
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "id":         {
                        "type":      "integer",
                        "required":  true,
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "attributes": {
                        "type":       "object",
                        "properties": {
                          "name_rubric":      {
                            "type":      "string",
                            "required":  true,
                            "maxLength": 500
                          },
                          "url":              {
                            "type":      "string",
                            "required":  true,
                            "maxLength": 255
                          },
                          "meta_title":       {
                            "type":      "string",
                            "required":  false,
                            "maxLength": 255
                          },
                          "meta_description": {
                            "type":      "string",
                            "required":  false,
                            "maxLength": 255
                          },
                          "show_menu":        {
                            "type":     "boolean",
                            "required": true
                          },
                          "publish_rss":      {
                            "type":     "boolean",
                            "required": true
                          },
                          "post_aggregator":  {
                            "type":     "boolean",
                            "required": true
                          },
                          "display_tape":     {
                            "type":     "boolean",
                            "required": true
                          }
                        }
                      },
                      "relationships": {
                        "type":       "object",
                        "properties": {
                          "tags":   {
                            "type":       "object",
                            "properties": {
                              "data": {
                                "type":  "array",
                                "items": [
                                  {
                                    "type":       "object",
                                    "properties": {
                                      "id":   {
                                        "type":      "integer",
                                        "required":  true,
                                        "minLength": 1,
                                        "maxLength": 255
                                      },
                                      "type": {
                                        "type":     "string",
                                        "pattern":  "/^tag$/",
                                        "required": true
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          "parent": {
                            "type":       "object",
                            "properties": {
                              "data": {
                                "type":       "object",
                                "properties": {
                                  "type":       "object",
                                  "properties": {
                                    "id":   {
                                      "type":      "integer",
                                      "required":  true,
                                      "minLength": 1,
                                      "maxLength": 255
                                    },
                                    "type": {
                                      "type":     "string",
                                      "pattern":  "/^rubric$/",
                                      "required": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }

                  }
                }
              }
            example: |
                {
                  "data": {
                    "type":          "rubric",
                    "id":2,
                    "attributes":    {
                      "name_rubric":      "name_rubric",
                      "url":              "mysite.ru",
                      "meta_title":       "meta_title",
                      "meta_description": "meta_description",
                      "show_menu":        true,
                      "publish_rss":      true,
                      "post_aggregator":  false,
                      "display_tape":     true
                    },
                    "relationships": {
                      "tags":   {
                        "data": [
                          {
                            "id":   1,
                            "type": "tag"
                          },
                          {
                            "id":   2,
                            "type": "tag"
                          }
                        ]
                      },
                      "parent": {
                        "data": {
                          "id":   1,
                          "type": "rubric"
                        }
                      }
                    }
                  }
                }
      202:
        description: |
          202 Accepted.
      204:
        description: |
          204 No Content
      403:
        description: |
          403 Forbidden
      404:
        description: |
          404 Not Found
        body:
          application/vnd.api+json:
            schema: |
              {
                "description": "Error",
                "type":        "object",
                "properties":  {
                  "errors": {
                    "type":       "object",
                    "required":   true,
                    "properties": {
                      "id":     {
                        "type":     "string | integer",
                        "required": true
                      },
                      "code":   {
                        "type":     "string | integer",
                        "required": false
                      },
                      "status": {
                        "type":     "integer",
                        "required": false
                      },
                      "title":  {
                        "type":     "string",
                        "required": false
                      },
                      "detail": {
                        "type":     "string",
                        "required": false
                      },
                      "source": {
                        "type":       "object",
                        "required":   false,
                        "properties": {
                          "pointer":   {
                            "type":     "string",
                            "required": true
                          },
                          "parameter": {
                            "type":     "string",
                            "required": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            example: |
              {
                  "errors": [
                      {
                          "status": 400,
                          "code"  : "RESOURCE_NOT_FOUND",
                          "title" : "Resource not found",
                          "detail": "The requested resource is not found!"
                      }
                  ]
              }
      409:
        description: |
          409 Conflict
        body:
          application/vnd.api+json:
            schema: |
              {
                "description": "Error",
                "type":        "object",
                "properties":  {
                  "errors": {
                    "type":       "object",
                    "required":   true,
                    "properties": {
                      "id":     {
                        "type":     "string | integer",
                        "required": true
                      },
                      "code":   {
                        "type":     "string | integer",
                        "required": false
                      },
                      "status": {
                        "type":     "integer",
                        "required": false
                      },
                      "title":  {
                        "type":     "string",
                        "required": false
                      },
                      "detail": {
                        "type":     "string",
                        "required": false
                      },
                      "source": {
                        "type":       "object",
                        "required":   false,
                        "properties": {
                          "pointer":   {
                            "type":     "string",
                            "required": true
                          },
                          "parameter": {
                            "type":     "string",
                            "required": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            example: |
              {
                  "errors": [
                      {
                          "status": 400,
                          "code"  : "RESOURCE_NOT_FOUND",
                          "title" : "Resource not found",
                          "detail": "The requested resource is not found!"
                      }
                  ]
              }
  get:
    responses:
      200:
        body:
          application/vnd.api+json:
            schema: |
              {
                "$schema":"http://json-schema.org/draft-03/schema#",
                "description": "Get list rubrics",
                "type":        "object",
                "properties":  {
                  "data":     {
                    "type":     "array",
                    "required": true,
                    "items":    [
                      {
                        "type":          {
                          "type":      "string",
                          "required":  true,
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "id":            {
                          "type":      "integer",
                          "required":  true,
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "attributes":    {
                          "type":       "object",
                          "properties": {
                            "name_rubric":      {
                              "type":      "string",
                              "required":  true,
                              "maxLength": 500
                            },
                            "url":              {
                              "type":      "string",
                              "required":  true,
                              "maxLength": 255
                            },
                            "meta_title":       {
                              "type":      "string",
                              "required":  false,
                              "maxLength": 255
                            },
                            "meta_description": {
                              "type":      "string",
                              "required":  false,
                              "maxLength": 255
                            },
                            "show_menu":        {
                              "type":     "boolean",
                              "required": true
                            },
                            "publish_rss":      {
                              "type":     "boolean",
                              "required": true
                            },
                            "post_aggregator":  {
                              "type":     "boolean",
                              "required": true
                            },
                            "display_tape":     {
                              "type":     "boolean",
                              "required": true
                            }
                          }
                        },
                        "relationships": {
                          "type":       "object",
                          "properties": {
                            "tags":   {
                              "type":       "object",
                              "properties": {
                                "data": {
                                  "type":  "array",
                                  "items": [
                                    {
                                      "type":       "object",
                                      "properties": {
                                        "id":   {
                                          "type":      "integer",
                                          "required":  true,
                                          "minLength": 1,
                                          "maxLength": 255
                                        },
                                        "type": {
                                          "type":     "string",
                                          "pattern":  "/^tag$/",
                                          "required": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "parent": {
                              "type":       "object",
                              "properties": {
                                "data": {
                                  "type":       "object",
                                  "properties": {
                                    "type":       "object",
                                    "properties": {
                                      "id":   {
                                        "type":      "integer",
                                        "required":  true,
                                        "minLength": 1,
                                        "maxLength": 255
                                      },
                                      "type": {
                                        "type":     "string",
                                        "pattern":  "/^rubric$/",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "children": {
                              "type":       "object",
                              "properties": {
                                "data": {
                                  "type":       "array",
                                  "items": [{
                                    "type":       "object",
                                    "properties": {
                                      "id":   {
                                        "type":      "integer",
                                        "required":  true,
                                        "minLength": 1,
                                        "maxLength": 255
                                      },
                                      "type": {
                                        "type":     "string",
                                        "pattern":  "/^rubric$/",
                                        "required": true
                                      }
                                    }
                                  }]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "included": {
                    "type":     "array",
                    "required": false,
                    "items":    [
                      {
                        "type":          {
                          "type":      "string",
                          "required":  true,
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "id":            {
                          "type":      "integer",
                          "required":  true,
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "attributes":    {
                          "type":       "object",
                          "properties": {
                            "text": {
                              "type":     "string",
                              "required": true
                            }
                          }
                        },
                        "relationships": {
                          "type":       "object",
                          "properties": {
                            "rubrics": {
                              "type":  "array",
                              "items": [
                                {
                                  "type":       "object",
                                  "properties": {
                                    "id":   {
                                      "type":      "integer",
                                      "required":  true,
                                      "minLength": 1,
                                      "maxLength": 255
                                    },
                                    "type": {
                                      "type":      "string",
                                      "required":  true,
                                      "minLength": 1,
                                      "maxLength": 255
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      {
                        "type":          {
                          "type":      "string",
                          "required":  true,
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "id":            {
                          "type":      "integer",
                          "required":  true,
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "attributes":    {
                          "type":       "object",
                          "properties": {
                            "name_rubric":      {
                              "type":      "string",
                              "required":  true,
                              "maxLength": 500
                            },
                            "url":              {
                              "type":      "string",
                              "required":  true,
                              "maxLength": 255
                            },
                            "meta_title":       {
                              "type":      "string",
                              "required":  false,
                              "maxLength": 255
                            },
                            "meta_description": {
                              "type":      "string",
                              "required":  false,
                              "maxLength": 255
                            },
                            "show_menu":        {
                              "type":     "boolean",
                              "required": true
                            },
                            "publish_rss":      {
                              "type":     "boolean",
                              "required": true
                            },
                            "post_aggregator":  {
                              "type":     "boolean",
                              "required": true
                            },
                            "display_tape":     {
                              "type":     "boolean",
                              "required": true
                            }
                          }
                        },
                        "relationships": {
                          "type":       "object",
                          "properties": {
                            "tags":   {
                              "type":       "object",
                              "properties": {
                                "data": {
                                  "type":  "array",
                                  "items": [
                                    {
                                      "type":       "object",
                                      "properties": {
                                        "id":   {
                                          "type":      "integer",
                                          "required":  true,
                                          "minLength": 1,
                                          "maxLength": 255
                                        },
                                        "type": {
                                          "type":     "string",
                                          "pattern":  "/^tag$/",
                                          "required": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "parent": {
                              "type":       "object",
                              "properties": {
                                "data": {
                                  "type":       "object",
                                  "properties": {
                                    "type":       "object",
                                    "properties": {
                                      "id":   {
                                        "type":      "integer",
                                        "required":  true,
                                        "minLength": 1,
                                        "maxLength": 255
                                      },
                                      "type": {
                                        "type":     "string",
                                        "pattern":  "/^rubric$/",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            example: |
                {
                  "data": {
                    "type":          "rubric",
                    "id":2,
                    "attributes":    {
                      "name_rubric":      "name_rubric",
                      "url":              "mysite.ru",
                      "meta_title":       "meta_title",
                      "meta_description": "meta_description",
                      "show_menu":        true,
                      "publish_rss":      true,
                      "post_aggregator":  false,
                      "display_tape":     true
                    },
                    "relationships": {
                      "tags":   {
                        "data": [
                          {
                            "id":   1,
                            "type": "tag"
                          },
                          {
                            "id":   2,
                            "type": "tag"
                          }
                        ]
                      },
                      "parent": {
                        "data": {
                          "id":   1,
                          "type": "rubric"
                        }
                      }
                    }
                  }
                }
      400:
        description: |
          400 Bad Request.
        body:
          application/vnd.api+json:
            schema: |
              {
                "$schema":"http://json-schema.org/draft-03/schema#",
                "description": "Error",
                "type":        "object",
                "properties":  {
                  "errors": {
                    "type":       "object",
                    "required":   true,
                    "properties": {
                      "id":     {
                        "type":     "string | integer",
                        "required": true
                      },
                      "code":   {
                        "type":     "string | integer",
                        "required": false
                      },
                      "status": {
                        "type":     "integer",
                        "required": false
                      },
                      "title":  {
                        "type":     "string",
                        "required": false
                      },
                      "detail": {
                        "type":     "string",
                        "required": false
                      },
                      "source": {
                        "type":       "object",
                        "required":   false,
                        "properties": {
                          "pointer":   {
                            "type":     "string",
                            "required": true
                          },
                          "parameter": {
                            "type":     "string",
                            "required": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            example: |
              {
                  "errors": [
                      {
                          "status": 400,
                          "code"  : "RESOURCE_NOT_FOUND",
                          "title" : "Resource not found",
                          "detail": "The requested resource is not found!"
                      }
                  ]
              }
      404:
        description: |
          404 Not Found
/rubric/{id}:
  uriParameters:
    id:
      type: integer
      minimum: 1
      maximum: 16
  get:
    responses:
      200:
        body:
          application/vnd.api+json:
            schema: |
              {
                "$schema":"http://json-schema.org/draft-03/schema#",
                "description": "View rubric for id",
                "type":        "object",
                "properties":  {
                  "data": {
                    "type":          "object",
                    "required":      true,
                    "properties":    {
                      "type":       {
                        "type":      "string",
                        "required":  true,
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "id":         {
                        "type":      "integer",
                        "required":  true,
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "attributes": {
                        "type":       "object",
                        "properties": {
                          "name_rubric":      {
                            "type":      "string",
                            "required":  true,
                            "maxLength": 500
                          },
                          "url":              {
                            "type":      "string",
                            "required":  true,
                            "maxLength": 255
                          },
                          "meta_title":       {
                            "type":      "string",
                            "required":  false,
                            "maxLength": 255
                          },
                          "meta_description": {
                            "type":      "string",
                            "required":  false,
                            "maxLength": 255
                          },
                          "show_menu":        {
                            "type":     "boolean",
                            "required": true
                          },
                          "publish_rss":      {
                            "type":     "boolean",
                            "required": true
                          },
                          "post_aggregator":  {
                            "type":     "boolean",
                            "required": true
                          },
                          "display_tape":     {
                            "type":     "boolean",
                            "required": true
                          }
                        }
                      }
                    },
                    "relationships": {
                      "type":       "object",
                      "properties": {
                        "tags":   {
                          "type":       "object",
                          "properties": {
                            "data": {
                              "type":  "array",
                              "items": [
                                {
                                  "type":       "object",
                                  "properties": {
                                    "id":   {
                                      "type":      "integer",
                                      "required":  true,
                                      "minLength": 1,
                                      "maxLength": 255
                                    },
                                    "type": {
                                      "type":     "string",
                                      "pattern":  "/^tag$/",
                                      "required": true
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "parent": {
                          "type":       "object",
                          "properties": {
                            "data": {
                              "type":       "object",
                              "properties": {
                                "type":       "object",
                                "properties": {
                                  "id":   {
                                    "type":      "integer",
                                    "required":  true,
                                    "minLength": 1,
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "type":     "string",
                                    "pattern":  "/^rubric$/",
                                    "required": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example: |
                  {
                    "data": {
                      "type":          "rubric",
                      "id":2,
                      "attributes":    {
                        "name_rubric":      "name_rubric",
                        "url":              "mysite.ru",
                        "meta_title":       "meta_title",
                        "meta_description":"meta_description",
                        "show_menu":        true,
                        "publish_rss":      true,
                        "post_aggregator":  false,
                        "display_tape":     true
                      },
                      "relationships": {
                        "tags":   {
                          "data": [
                            {
                              "id":   1,
                              "type": "tag"
                            },
                            {
                              "id":   2,
                              "type": "tag"
                            }
                          ]
                        },
                        "parent": {
                          "data": {
                            "id":   1,
                            "type": "rubric"
                          }
                        }
                      }
                    }
                  }
      400:
        description: |
          Bad Request.
        body:
          application/vnd.api+json:
            schema: |
              {
                "$schema":"http://json-schema.org/draft-03/schema#",
                "description": "Error",
                "type":        "object",
                "properties":  {
                  "errors": {
                    "type":       "object",
                    "required":   true,
                    "properties": {
                      "id":     {
                        "type":     "string | integer",
                        "required": true
                      },
                      "code":   {
                        "type":     "string | integer",
                        "required": false
                      },
                      "status": {
                        "type":     "integer",
                        "required": false
                      },
                      "title":  {
                        "type":     "string",
                        "required": false
                      },
                      "detail": {
                        "type":     "string",
                        "required": false
                      },
                      "source": {
                        "type":       "object",
                        "required":   false,
                        "properties": {
                          "pointer":   {
                            "type":     "string",
                            "required": true
                          },
                          "parameter": {
                            "type":     "string",
                            "required": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            example: |
              {
                  "errors": [
                      {
                          "status": 400,
                          "code"  : "RESOURCE_NOT_FOUND",
                          "title" : "Resource not found",
                          "detail": "The requested resource is not found!"
                      }
                  ]
              }
      404:
        description: |
          400 Bad Request
  patch:
    description: |
      Обновление рубрики по Id
    body:
      application/vnd.api+json:
        schema: |
          {
            "$schema":"http://json-schema.org/draft-03/schema#",
            "description": "Update rubric for Id",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "required": true,
                "properties": {
                  "type": {
                    "type": "string",
                    "required": true,
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name_rubric": {
                        "type": "string",
                        "required": true,
                        "maxLength": 500
                      },
                      "url": {
                        "type": "string",
                        "required": true,
                        "maxLength": 255
                      },
                      "meta_title": {
                        "type": "string",
                        "required": false,
                        "maxLength": 255
                      },
                      "meta_description": {
                        "type": "string",
                        "required": false,
                        "maxLength": 255
                      },
                      "show_menu": {
                        "type": "boolean",
                        "required": true
                      },
                      "publish_rss": {
                        "type": "boolean",
                        "required": true
                      },
                      "post_aggregator": {
                        "type": "boolean",
                        "required": true
                      },
                      "display_tape": {
                        "type": "boolean",
                        "required": true
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": [{
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "required": true,
                                  "minLength": 1,
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "pattern": "/^tag$/",
                                  "required": true
                                }
                              }
                            }]
                          }
                        }
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "required": true,
                                  "minLength": 1,
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "pattern": "/^rubric$/",
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      }
                    }

                  }
                }

              }
            }
          }
        example: |
          {
            "data": {
              "type":          "rubric",
              "attributes":    {
                "name_rubric":      "name_rubric",
                "url":              "mysite.ru",
                "meta_title":       "meta_title",
                "meta_description": "meta_description",
                "show_menu":        true,
                "publish_rss":      true,
                "post_aggregator":  false,
                "display_tape":     true
              },
              "relationships": {
                "tags":   {
                  "data": [
                    {
                      "id":   1,
                      "type": "tag"
                    },
                    {
                      "id":   2,
                      "type": "tag"
                    }
                  ]
                },
                "parent": {
                  "data": {
                    "id":   1,
                    "type": "rubric"
                  }
                }
              }
            }
          }
    responses:
      200:
        description: |
          200 OK
            If a server accepts an update but also changes the resource(s) in ways other than those specified by the request (for example, updating the updated-at attribute or a computed sha), it MUST return a 200 OK response. The response document MUST include a representation of the updated resource(s) as if a GET request was made to the request URL.

            A server MUST return a 200 OK status code if an update is successful, the client’s current attributes remain up to date, and the server responds only with top-level meta data. In this case the server MUST NOT include a representation of the updated resource(s).
        body:
          application/vnd.api+json:
            schema: |
              {
                "$schema":"http://json-schema.org/draft-03/schema#",
                "description": "Update rubric",
                "type":        "object",
                "properties":  {
                  "data": {
                    "type":          "object",
                    "required":      true,
                    "properties":    {
                      "type":       {
                        "type":      "string",
                        "required":  true,
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "id":         {
                        "type":      "integer",
                        "required":  true,
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "attributes": {
                        "type":       "object",
                        "properties": {
                          "name_rubric":      {
                            "type":      "string",
                            "required":  true,
                            "maxLength": 500
                          },
                          "url":              {
                            "type":      "string",
                            "required":  true,
                            "maxLength": 255
                          },
                          "meta_title":       {
                            "type":      "string",
                            "required":  false,
                            "maxLength": 255
                          },
                          "meta_description": {
                            "type":      "string",
                            "required":  false,
                            "maxLength": 255
                          },
                          "show_menu":        {
                            "type":     "boolean",
                            "required": true
                          },
                          "publish_rss":      {
                            "type":     "boolean",
                            "required": true
                          },
                          "post_aggregator":  {
                            "type":     "boolean",
                            "required": true
                          },
                          "display_tape":     {
                            "type":     "boolean",
                            "required": true
                          }
                        }
                      },
                      "relationships": {
                        "type":       "object",
                        "properties": {
                          "tags":   {
                            "type":       "object",
                            "properties": {
                              "data": {
                                "type":  "array",
                                "items": [
                                  {
                                    "type":       "object",
                                    "properties": {
                                      "id":   {
                                        "type":      "integer",
                                        "required":  true,
                                        "minLength": 1,
                                        "maxLength": 255
                                      },
                                      "type": {
                                        "type":     "string",
                                        "pattern":  "/^tag$/",
                                        "required": true
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          "parent": {
                            "type":       "object",
                            "properties": {
                              "data": {
                                "type":       "object",
                                "properties": {
                                  "type":       "object",
                                  "properties": {
                                    "id":   {
                                      "type":      "integer",
                                      "required":  true,
                                      "minLength": 1,
                                      "maxLength": 255
                                    },
                                    "type": {
                                      "type":     "string",
                                      "pattern":  "/^rubric$/",
                                      "required": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }

                  }
                }
              }
            example: |
                {
                  "data": {
                    "type":          "rubric",
                    "id":2,
                    "attributes":    {
                      "name_rubric":      "name_rubric",
                      "url":              "mysite.ru",
                      "meta_title":       "meta_title",
                      "meta_description": "meta_description",
                      "show_menu":        true,
                      "publish_rss":      true,
                      "post_aggregator":  false,
                      "display_tape":     true
                    },
                    "relationships": {
                      "tags":   {
                        "data": [
                          {
                            "id":   1,
                            "type": "tag"
                          },
                          {
                            "id":   2,
                            "type": "tag"
                          }
                        ]
                      },
                      "parent": {
                        "data": {
                          "id":   1,
                          "type": "rubric"
                        }
                      }
                    }
                  }
                }
      202:
        description: |
          202 Accepted
      204:
        description: |
          204 No Content
      403:
        description: |
          403 Forbidden
      404:
        description: |
          404 Not Found
      409:
        description: |
          409 Conflict
  delete:
    description: |
      Delet rubric for Id.
    responses:
      202:
        description: |
          202 Accepted
      204:
        description: |
          204 No Content
      200:
        description: |
          200 OK
      404:
        description: |
          404 Not Found
/rubric/{id}/relatonships/{relation}:
  uriParameters:
    id:
      type: string
      pattern: ^[1-9][0-9]*$
      minLength: 1
    relation:
      type: string
      pattern: ^[a-zA-Z0-9][-a-zA-Z0-9]*$
      minLength: 1
  get:
    description: |
      Retrieve relationships
    responses:
      200:
        description:
          Succesfully retrieved relationships
        body:
          application/vnd.api+json:
            schema: |
              {
                "$schema":"http://json-schema.org/draft-03/schema#",
                "type": "object",
                "properties":{
                  "data":{
                    "type":"array",
                    "items": [
                      {
                        "type":       "object",
                        "properties": {
                          "id":   {
                            "type":      "integer",
                            "required":  true,
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "type": {
                            "type":     "string",
                            "pattern":  "/^rubric$/",
                            "required": true
                          }
                        }
                      },
                      {
                        "type":       "object",
                        "properties": {
                          "id":   {
                            "type":      "integer",
                            "required":  true,
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "type": {
                            "type":     "string",
                            "pattern":  "/^tag$/",
                            "required": true
                          }
                        }
                      }]
                  }
                }
              }
            example: |
              {
                "data": [
                    {"id": 1, "type": "rubric"},
                    {"id": 2, "type": "tag"}
                ]
              }
  post:
    description: |
      Create a new relationships
    body:
      application/vnd.api+json:
        schema: |
          {
              "$schema":"http://json-schema.org/draft-03/schema#",
              "type"      : "object",
              "properties": {
                  "data": {
                      "type" : "array",
                      "items": [
                          {
                              "type"      : "object",
                              "properties": {
                                  "id"  : {
                                      "type"     : "integer",
                                      "required" : true,
                                      "minLength": 1,
                                      "maxLength": 255
                                  },
                                  "type": {
                                      "type"    : "string",
                                      "pattern" : "/^rubric$/",
                                      "required": true
                                  }
                              }
                          },
                          {
                              "type"      : "object",
                              "properties": {
                                  "id"  : {
                                      "type"     : "integer",
                                      "required" : true,
                                      "minLength": 1,
                                      "maxLength": 255
                                  },
                                  "type": {
                                      "type"    : "string",
                                      "pattern" : "/^tag$/",
                                      "required": true
                                  }
                              }
                          }

                      ]
                  }
              }
          }
        example: |
          {
              "data": [
                  {"id": 1, "type": "tag"},
                  {"id": 2, "type": "tag"}
              ]
          }
    responses:
      201:
        description: |
          Succesfully created a new relationships.
        body:
          application/vnd.api+json:
            schema: |
              {
                "$schema":"http://json-schema.org/draft-03/schema#",
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "required": true,
                                        "minLength": 1,
                                        "maxLength": 255
                                    },
                                    "type": {
                                        "type": "string",
                                        "pattern": "/^rubric$/",
                                        "required": true
                                    }
                                }
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "required": true,
                                        "minLength": 1,
                                        "maxLength": 255
                                    },
                                    "type": {
                                        "type": "string",
                                        "pattern": "/^tag$/",
                                        "required": true
                                    }
                                }
                            }
                        ]
                    }
                }
              }
            example: |
              {
                  "data": [
                      {"id": 1, "type": "tag"},
                      {"id": 2, "type": "tag"}
                    ]
              }
  patch:
    description: |
      Update a field of a relationships
    body:
      application/vnd.api+json:
        schema: |
          {
            "$schema":"http://json-schema.org/draft-03/schema#",
            "type"      : "object",
            "properties": {
                "data": {
                    "type" : "array",
                    "items": [
                        {
                            "type"      : "object",
                            "properties": {
                                "id"  : {
                                    "type"     : "integer",
                                    "required" : true,
                                    "minLength": 1,
                                    "maxLength": 255
                                },
                                "type": {
                                    "type"    : "string",
                                    "pattern" : "/^rubric$/",
                                    "required": true
                                }
                            }
                        },
                        {
                            "type"      : "object",
                            "properties": {
                                "id"  : {
                                    "type"     : "integer",
                                    "required" : true,
                                    "minLength": 1,
                                    "maxLength": 255
                                },
                                "type": {
                                    "type"    : "string",
                                    "pattern" : "/^tag$/",
                                    "required": true
                                }
                            }
                        }

                    ]
                }
            }
          }
        example: |
          {
              "data": [
                  {"id": 1, "type": "tag"},
                  {"id": 2, "type": "tag"}
              ]
          }
    responses:
      204:
        description: |
          Succesfully updated relationships
        body:
          application/vnd.api+json:
            schema: |
              {
                "$schema":"http://json-schema.org/draft-03/schema#",
                "type"      : "object",
                "properties": {
                    "data": {
                        "type" : "array",
                        "items": [
                            {
                              "type"      : "object",
                              "properties": {
                                  "id"  : {
                                      "type"     : "integer",
                                      "required" : true,
                                      "minLength": 1,
                                      "maxLength": 255
                                  },
                                  "type": {
                                      "type"    : "string",
                                      "pattern" : "/^rubric$/",
                                      "required": true
                                  }
                                }
                            },
                            {
                              "type"      : "object",
                              "properties": {
                                  "id"  : {
                                      "type"     : "integer",
                                      "required" : true,
                                      "minLength": 1,
                                      "maxLength": 255
                                  },
                                  "type": {
                                      "type"    : "string",
                                      "pattern" : "/^tag$/",
                                      "required": true
                                  }
                              }
                            }

                        ]
                    }
                }
              }
            example: |
              {
                "data": [
                    {"id": 1, "type": "tag"},
                    {"id": 2, "type": "tag"}
                ]
              }
  delete:
    description: |
      Delete relationships
    responses:
      204:
        description: |
          Succesfully deleted relationships
/rubrics/{id}/{relate}:
  uriParameters:
    id:
      type: string
      pattern: ^[1-9][0-9]*$
      minLength: 1
    relate:
      type: string
      pattern: ^[a-zA-Z0-9][-a-zA-Z0-9]*$
      minLength: 1
  get:
    description: |
      Retrieve resource
    responses:
      200:
        description: |
          Succesfully retrieved resource
        body:
          application/vnd.api+json:
            schema: |
              {
                "type":"object",
                "properties": {
                    "data": {
                      "type"    : "array",
                      "required": true,
                      "items"   : [
                        {
                          "type"         : {
                            "type"     : "string",
                            "required" : true,
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "id"           : {
                            "type"     : "integer",
                            "required" : true,
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "attributes"   : {
                              "type"      : "object",
                              "properties": {
                                "name_rubric"     : {
                                  "type"     : "string",
                                  "required" : true,
                                  "maxLength": 500
                                },
                                "url"             : {
                                  "type"     : "string",
                                  "required" : true,
                                  "maxLength": 255
                                },
                                "meta_title"      : {
                                  "type"     : "string",
                                  "required" : false,
                                  "maxLength": 255
                                },
                                "meta_description": {
                                  "type"     : "string",
                                  "required" : false,
                                  "maxLength": 255
                                },
                                "show_menu"       : {
                                  "type"    : "boolean",
                                  "required": true
                                },
                                "publish_rss"     : {
                                  "type"    : "boolean",
                                  "required": true
                                },
                                "post_aggregator" : {
                                  "type"    : "boolean",
                                  "required": true
                                },
                                "display_tape"    : {
                                  "type"    : "boolean",
                                  "required": true
                                }
                              }
                            },
                            "relationships": {
                                "type"      : "object",
                                "properties": {
                                  "tags"    : {
                                    "type"      : "object",
                                    "properties": {
                                      "data": {
                                        "type" : "array",
                                        "items": [
                                          {
                                            "type"      : "object",
                                            "properties": {
                                              "id"  : {
                                                "type"     : "integer",
                                                "required" : true,
                                                "minLength": 1,
                                                "maxLength": 255
                                              },
                                              "type": {
                                                "type"    : "string",
                                                "pattern" : "/^tag$/",
                                                "required": true
                                              }
                                            }
                                          }
                                        ]
                                        }
                                      }

                                    }
                                  },


                                  "parent"  : {
                                    "type"      : "object",
                                    "properties": {
                                      "data": {
                                        "type"      : "object",
                                        "properties": {
                                          "type"      : "object",
                                          "properties": {
                                            "id"  : {
                                              "type"     : "integer",
                                              "required" : true,
                                              "minLength": 1,
                                              "maxLength": 255
                                            },
                                            "type": {
                                              "type"    : "string",
                                              "pattern" : "/^rubric$/",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },


                                  "children": {
                                    "type"      : "object",
                                    "properties": {
                                      "data": {
                                        "type" : "array",
                                        "items": [
                                          {
                                            "type"      : "object",
                                            "properties": {
                                              "id"  : {
                                                "type"     : "integer",
                                                "required" : true,
                                                "minLength": 1,
                                                "maxLength": 255
                                              },
                                              "type": {
                                                "type"    : "string",
                                                "pattern" : "/^rubric$/",
                                                "required": true
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                              }
                        },
                        {
                          "type"      : "object",
                          "required"  : true,
                          "properties": {
                            "type"         : {
                              "type"     : "string",
                              "required" : true,
                              "minLength": 1,
                              "maxLength": 255
                            },
                            "id"           : {
                              "type"     : "integer",
                              "required" : true,
                              "minLength": 1,
                              "maxLength": 255
                            },

                            "attributes"   : {
                              "type"      : "object",
                              "properties": {
                                  "text": {
                                    "type"     : "string",
                                    "required" : true,
                                    "maxLength": 500
                                    }
                              }
                            },
                            "relationships": {
                              "type"      : "object",
                              "properties": {
                                "rubrics": {
                                  "type"      : "object",
                                  "properties": {
                                    "data": {
                                      "type" : "array",
                                      "items": [
                                        {
                                          "type"      : "object",
                                          "properties": {
                                            "id"  : {
                                              "type"     : "integer",
                                              "required" : true,
                                              "minLength": 1,
                                              "maxLength": 255
                                            },
                                            "type": {
                                              "type"    : "string",
                                              "pattern" : "/^rubric$/",
                                              "required": true
                                            }
                                            }
                                        }
                                      ]
                                      }
                                    }
                                  }
                                }
                              }
                          }
                        }
                      ]
                      }
                  }
              }
